version: "3.9"

services:
  web:
    container_name: locker-web
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - 80:80
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
      - mailhog
      - redis

  php:
    container_name: locker-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - 9000:9000
    volumes:
      - ./backend:/var/www

  front:
    build:
      context: ./docker/front
      dockerfile: Dockerfile
    container_name: locker-front
    volumes:
      - ./frontend:/var/www/html
    environment:
      - WATCHPACK_POLLING=true
    ports:
      - 3007:3000
    tty: true
    command: sh -c "yarn & yarn dev"

  mysql:
    image: mysql:8.0
    container_name: locker-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: locker_db
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
      TZ: "Asia/Tokyo"
    ports:
      - 3309:3306
    volumes:
      - ./tmp/db:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d

  mailhog:
    image: mailhog/mailhog
    container_name: locker-mailhog
    ports:
      - 8025:8025

  redis:
    image: redis:latest
    container_name: locker-redis
    ports:
      - 6379:6379
    volumes:
      - ./tmp/redis:/data
      - ./docker/redis/redis.conf:/etc/redis.conf
